
# Задание 1: Получение случайной цитаты
# Напишите функцию get_random_quote(), которая запрашивает случайную цитату с API https://api.quotable.io/random и возвращает её.
# Условия:
# - Используйте requests.get().
# - Ответ должен быть возвращён в виде строки с цитатой.
# - Обработайте ошибки, если запрос не удался.
# Пример:
# Входные данные: Нет входных данных, так как цитата генерируется случайным образом.
# Выходные данные:
# {
#   "content": "The only way to do great work is to love what you do.",
#   "author": "Steve Jobs"
# }

# Задание 2: Получение курса валют
# Напишите функцию get_exchange_rate(), которая получает курс валюты (например, курс доллара к тенге) с API https://api.exchangerate.host/latest с параметрами base="USD" и symbols="KZT".
# Условия:
# - Используйте requests.get().
# - Возвращайте результат в виде словаря, где указаны данные по курсу валют.
# - Обработайте возможные ошибки (например, неверный формат ответа).
# Пример:
# Входные данные: Нет входных данных, так как функция просто получает курс валют.
# Выходные данные:
# {
#   "base": "USD",
#   "date": "2025-05-01",
#   "rates": {
#     "KZT": 464.50
#   }
# }

# Задание 3: Прогноз погоды
# Напишите функцию get_weather(), которая запрашивает данные о погоде для города Алматы с API OpenWeatherMap.
# Условия:
# - Используйте requests.get() с URL, где в строке запроса передаются название города и ваш API-ключ.
# - Верните информацию о температуре в Цельсиях.
# - Если API-ключ неверный, обработайте ошибку.
# Пример:
# Входные данные:
# - Город: "Almaty"
# - Ваш API-ключ
# Выходные данные:
# {
#   "main": {
#     "temp": 293.25
#   }
# }

# Задание 4: Взаимодействие с API методом POST
# Напишите функцию send_message(), которая отправляет сообщение на сервер с помощью POST-запроса.
# Условия:
# - Для этого задания используйте любой публичный API, который поддерживает отправку сообщений через POST (например, API для отправки уведомлений).
# - Функция должна принимать параметры: user_id и message.
# - Сохраните результат запроса и возвращайте его.
# Пример:
# Входные данные:
# - user_id: 123
# - message: "Hello, world!"
# Выходные данные:
# {
#   "status": "success",
#   "message": "Message sent successfully!"
# }

# Задание 5: Получение данных о пользователе
# Напишите функцию get_user_info(), которая получает информацию о пользователе с API (например, https://jsonplaceholder.typicode.com/users).
# Условия:
# - Функция должна выводить имя и email пользователя.
# - Используйте метод GET для получения данных.
# Пример:
# Входные данные:
# Нет входных данных.
# Выходные данные:
# {
#   "name": "Leanne Graham",
#   "email": "Sincere@april.biz"
# }

# Задание 6: Отправка данных формы на сервер
# Напишите функцию submit_form(), которая отправляет данные формы на сервер с помощью POST-запроса.
# Условия:
# - Используйте API https://reqres.in для отправки данных.
# - Формат данных для отправки: name и job.
# - Верните ответ от сервера.
# Пример:
# Входные данные:
# - name: "John Doe"
# - job: "Software Developer"
# Выходные данные:
# {
#   "name": "John Doe",
#   "job": "Software Developer",
#   "id": "1",
#   "createdAt": "2025-05-01T12:00:00.000Z"
# }

# Задание 7: Скачивание изображений
# Напишите функцию download_image(), которая скачивает изображение с URL и сохраняет его на диск.
# Условия:
# - Используйте requests.get() для скачивания файла.
# - Изображение сохраните в текущей директории с именем image.jpg.
# - Проверьте, существует ли файл, прежде чем скачивать.
# Пример:
# Входные данные:
# - URL изображения: "https://example.com/image.jpg"
# Выходные данные:
# - Изображение будет сохранено в файл image.jpg в текущей директории.

# Задание 8: Получение информации о пользователях через API
# Напишите функцию get_user_info_by_id(), которая запрашивает информацию о пользователе по его ID с API https://jsonplaceholder.typicode.com/users/{id}.
# Условия:
# - Функция должна принимать user_id как аргумент.
# - Вывести информацию о пользователе (имя, email).
# - Обработайте ошибку, если введён неправильный ID.
# Пример:
# Входные данные:
# - user_id: 1
# Выходные данные:
# {
#   "id": 1,
#   "name": "Leanne Graham",
#   "username": "Bret",
#   "email": "Sincere@april.biz"
# }

# Задание 9: Работа с параметрами в URL
# Напишите функцию get_weather_by_city(), которая получает погоду для указанного города с API OpenWeatherMap.
# Условия:
# - Функция должна принимать city как аргумент.
# - Используйте requests.get() с параметрами, включающими ваш API-ключ.
# - Верните температуру в градусах Цельсия для города, указанного в параметре.
# Пример:
# Входные данные:
# - Город: "Almaty"
# - Ваш API-ключ
# Выходные данные:
# {
#   "main": {
#     "temp": 293.25
#   }
# }

