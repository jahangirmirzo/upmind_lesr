
Переменные окружения, Перенаправление ввода/вывода и Основы Bash-скриптов

ЧАСТЬ 1: Переменные окружения
Что это: переменные, хранящие важные значения, используемые системой и программами.
Команды:
- echo $VARIABLE — вывести значение переменной
- export NAME=Значение — создать переменную окружения
- unset ИМЯ_ПЕРЕМЕННОЙ - Удаляет переменную из текущей сессии.
- printenv -  Показать все переменные окружения
- printenv ИМЯ - Показать значение одной переменной


Пример:
export NAME=Дима
echo $NAME

ЧАСТЬ 2: Перенаправление вывода/ввода
Что это: возможность сохранять результат команды в файл или передавать одной команде результат другой.
Команды:
- > — записывает результат в файл (перезаписывает)
- >> — добавляет в конец файла
- | — передаёт результат в другую команду

Пример:
echo "Привет!" > file.txt
echo "Как дела?" >> file.txt
cat file.txt | grep "дела"

ЧАСТЬ 3: Работа с архивами
Команды:
- tar -cvf archive.tar папка/ — создать архив
- tar -xvf archive.tar — распаковать архив
- zip archive.zip файл — создать zip
- unzip archive.zip — распаковать zip

Пример:
tar -cvf backup.tar Documents/
zip files.zip file1.txt file2.txt

ЧАСТЬ 4: Введение в bash-скрипты
Что это: текстовые файлы с командами, которые можно выполнить как программу.

Структура:
#!/bin/bash
echo "Привет, мир!"

Создание и запуск:
nano hello.sh
chmod +x hello.sh
./hello.sh

ЧАСТЬ 5: Переменные и аргументы в скриптах
Пример:
name="Анна"
echo "Привет, $name"

Аргументы:
#!/bin/bash
echo "Привет, $1"

Запуск:
./myscript.sh Дима

ЧАСТЬ 6: Условные конструкции if/elif/else
Синтаксис:
if [ условие ]; then
  команда
elif [ другое ]; then
  команда
else
  команда
fi

1. Проверка числа:
if [ $num -gt 10 ]; then
  echo "Число больше 10"
fi
Операторы сравнения для чисел:
-eq	равно
-ne	не равно
-gt	больше
-lt	меньше
-ge	больше или равно
-le	меньше или равно

2. Проверка строки:
if [ "$name" = "Anna" ]; then
  echo "Привет, Анна!"
fi
Сравнение строк:
=	равно
!=	не равно
-z	пустая строка
-n	непустая строка

3. Составные условия:
if [ $age -ge 18 ] && [ "$country" = "Kyrgyzstan" ]; then
  echo "Доступ разрешён"
fi

Логические операторы:
&&	И (оба условия)
|| или
! НЕ (инвертируемые условия)


4. Проверка существования файла или папки:
if [ -f "file.txt" ]; then
  echo "Файл существует"
fi

if [ -d "my_folder" ]; then
  echo "Папка существует"
fi

Флаг	Значение
-f	обычный файл существует
-d	директория существует
-e	файл или папка существует
-s	файл не пустой

5. Использование elif и else:
if [ $temp -lt 0 ]; then
  echo "Очень холодно"
elif [ $temp -lt 20 ]; then
  echo "Прохладно"
else
  echo "Тепло"
fi


Домашнее задание (20 заданий)

1–5: Переменные окружения
1. Создайте переменную AGE и выведите её.
2. Выведите переменную USER.
3. Создайте переменную CITY.
4. Удалите CITY с помощью unset.
5. Покажите все переменные через printenv.

6–10: Перенаправление
6. Сохраните ls в list.txt.
7. Добавьте дату в list.txt.
8. Создайте файл с текстом.
9. Найдите слово в файле через grep.
10. Найдите процессы bash через ps | grep.

11–13: Архивация
11. Заархивируйте папку.
12. Распакуйте архив.
13. Создайте и распакуйте zip.

14–17: Скрипты
14. Напишите скрипт-приветствие.
15. Скрипт с аргументом имени.
16. Сделайте скрипт исполняемым.
17. Скрипт с текущей датой.

18–20: Условия
18. Скрипт: число больше 100?
19. Скрипт: понедельник или нет.
20. Скрипт: спрашивает имя и здоровается.
